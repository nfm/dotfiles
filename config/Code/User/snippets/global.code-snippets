{
  // Basic ES6 stuff
  "import": {
    "prefix": "imp",
    "scope": "javascript,typescript,typescriptreact",
    "body": "import ${2:moduleName} from \"${1:module}\"\n$0",
    "description": "Imports entire module statement in ES6 syntax"
  },
  "importDestructuring": {
    "prefix": "imd",
    "scope": "javascript,typescript,typescriptreact",
    "body": "import { $2 } from \"${1:module}\"\n$0",
    "description": "Imports only a portion of the module in ES6 syntax"
  },
  "importAs": {
    "prefix": "ima",
    "scope": "javascript,typescript,typescriptreact",
    "body": "import { ${2:originalName} as ${3:alias} } from \"${1:module}\"\n$0",
    "description": "Imports a specific portion of the module by assigning a local alias in ES6 syntax"
  },
  "exportNamedFunction": {
    "prefix": "enf",
    "scope": "javascript,typescript,typescriptreact",
    "body": "export const ${1:functionName} = (${2:params}) =>  {\n\treturn $0\n}\n",
    "description": "Export named function in ES6 syntax"
  },
  "exportFrom": {
    "prefix": "ef",
    "scope": "javascript,typescript,typescriptreact",
    "body": "export { ${2:export} } from \"${1:file}\"",
    "description": "Re-export named export from a file"
  },
  "namedFunction": {
    "prefix": "nfn",
    "scope": "javascript,typescript,typescriptreact",
    "body": "const ${1:name} = (${2:params}) => {\n\t${3}\n}",
    "description": "Creates a named function in ES6 syntax"
  },
  "destructingObject": {
    "prefix": "dob",
    "scope": "javascript,typescript,typescriptreact",
    "body": "const {${2:propertyName}} = ${1:objectToDestruct}",
    "description": "Creates and assigns a local variable using object destructing"
  },
  "destructingArray": {
    "prefix": "dar",
    "scope": "javascript,typescript,typescriptreact",
    "body": "const [${2:propertyName}] = ${1:arrayToDestruct}",
    "description": "Creates and assigns a local variable using array destructing"
  },
  "consoleDir": {
    "prefix": "cld",
    "scope": "javascript,typescript,typescriptreact",
    "body": "console.dir(${1:object});",
    "description": "Prints a JavaScript representation of the specified object"
  },
  "consoleLog": {
    "prefix": "clg",
    "scope": "javascript,typescript,typescriptreact",
    "body": "console.log(${1:object})",
    "description": "Displays a message in the console"
  },
  // React
  "Import react": {
    "prefix": "imr",
    "scope": "javascript,typescript,typescriptreact",
    "body": "import React from \"react\"\n$0",
    "description": "Import react"
  },
  "Import react, { ... }": {
    "prefix": "imrr",
    "scope": "javascript,typescript,typescriptreact",
    "body": "import React, { $1 } from \"react\"\n$0",
    "description": "Import react"
  },
  "React function component": {
    "prefix": "rfc",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "interface Props {",
      "\t$2",
      "}",
      "",
      "export const $1: React.FunctionComponent<Props> = ($3) => {",
      "\treturn(",
      "\t\t$4",
      "\t)",
      "}",
    ],
    "description": "Define a React function component"
  },
  "ComponentWillMount": {
    "prefix": "cwm",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "componentWillMount() {",
      "\t$1",
      "}"
    ]
  },
  "ComponentWillUpdate": {
    "prefix": "cwu",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "componentWillUpdate() {",
      "\t$1",
      "}"
    ]
  },
  "ComponentDidUpdate": {
    "prefix": "cdu",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "componentDidUpdate(prevProps, prevState) {",
      "\t$1",
      "}"
    ]
  },
  "ShouldComponentUpdate": {
    "prefix": "scu",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "shouldComponentUpdate(nextProps, nextState, nextContext) {",
      "\t $1",
      "}"
    ]
  },
  "ComponentWillReceiveProps": {
    "prefix": "cwrp",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "componentWillReceiveProps(nextProps) {",
      "\t$1",
      "}"
    ]
  },
  "PureComponentClass": {
    "prefix": "pcc",
    "scope": "javascript,typescript,typescriptreact",
    "body": "class ${1:Klass} extends PureComponent<${2:Props}, ${3:State}> {\n\trender() {\n\t\t$4\n\t}\n}"
  },
  // Typescript
  "interface": {
    "prefix": "int",
    "scope": "typescript,typescriptreact",
    "body": "interface ${1:Interface} {\n\t$0\n}",
    "description": "Define an interface"
  }
}